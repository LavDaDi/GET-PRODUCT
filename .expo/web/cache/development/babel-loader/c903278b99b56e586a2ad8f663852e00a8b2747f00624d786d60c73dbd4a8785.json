{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useWorker } from '@koale/useworker';\nimport * as React from 'react';\nimport { captureImageData } from \"./WebCameraUtils\";\nvar qrWorkerMethod = function qrWorkerMethod(_ref) {\n  var _parsed;\n  var data = _ref.data,\n    width = _ref.width,\n    height = _ref.height;\n  var decoded = self.jsQR(data, width, height, {\n    inversionAttempts: 'dontInvert'\n  });\n  var parsed;\n  try {\n    parsed = JSON.parse(decoded);\n  } catch (err) {\n    parsed = decoded;\n  }\n  if ((_parsed = parsed) != null && _parsed.data) {\n    var nativeEvent = {\n      type: 'qr',\n      data: parsed.data\n    };\n    if (parsed.location) {\n      nativeEvent.cornerPoints = [parsed.location.topLeftCorner, parsed.location.bottomLeftCorner, parsed.location.topRightCorner, parsed.location.bottomRightCorner];\n    }\n    return nativeEvent;\n  }\n  return parsed;\n};\nfunction useRemoteJsQR() {\n  return useWorker(qrWorkerMethod, {\n    remoteDependencies: ['https://cdn.jsdelivr.net/npm/jsqr@1.2.0/dist/jsQR.min.js'],\n    timeout: 5000\n  });\n}\nexport function useWebQRScanner(video, _ref2) {\n  var isEnabled = _ref2.isEnabled,\n    captureOptions = _ref2.captureOptions,\n    interval = _ref2.interval,\n    onScanned = _ref2.onScanned,\n    onError = _ref2.onError;\n  var isRunning = React.useRef(false);\n  var timeout = React.useRef(undefined);\n  var _useRemoteJsQR = useRemoteJsQR(),\n    _useRemoteJsQR2 = _slicedToArray(_useRemoteJsQR, 2),\n    decode = _useRemoteJsQR2[0],\n    clearWorker = _useRemoteJsQR2[1];\n  function scanAsync() {\n    var data, nativeEvent, intervalToUse;\n    return _regeneratorRuntime.async(function scanAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!isRunning.current || !onScanned)) {\n              _context.next = 3;\n              break;\n            }\n            stop();\n            return _context.abrupt(\"return\");\n          case 3:\n            _context.prev = 3;\n            data = captureImageData(video.current, captureOptions);\n            if (!data) {\n              _context.next = 10;\n              break;\n            }\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(decode(data));\n          case 8:\n            nativeEvent = _context.sent;\n            if (nativeEvent != null && nativeEvent.data) {\n              onScanned({\n                nativeEvent: nativeEvent\n              });\n            }\n          case 10:\n            _context.next = 15;\n            break;\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](3);\n            if (onError) {\n              onError({\n                nativeEvent: _context.t0\n              });\n            }\n          case 15:\n            _context.prev = 15;\n            if (!(interval === 0)) {\n              _context.next = 19;\n              break;\n            }\n            stop();\n            return _context.abrupt(\"return\");\n          case 19:\n            intervalToUse = !interval || interval < 0 ? 16 : interval;\n            timeout.current = setTimeout(function () {\n              scanAsync();\n            }, intervalToUse);\n            return _context.finish(15);\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 12, 15, 22]], Promise);\n  }\n  function stop() {\n    isRunning.current = false;\n    clearTimeout(timeout.current);\n  }\n  React.useEffect(function () {\n    if (isEnabled) {\n      isRunning.current = true;\n      scanAsync();\n    } else {\n      stop();\n    }\n  }, [isEnabled]);\n  React.useEffect(function () {\n    return function () {\n      stop();\n      clearWorker.kill();\n    };\n  }, []);\n}","map":{"version":3,"names":["useWorker","React","captureImageData","qrWorkerMethod","_ref","_parsed","data","width","height","decoded","self","jsQR","inversionAttempts","parsed","JSON","parse","err","nativeEvent","type","location","cornerPoints","topLeftCorner","bottomLeftCorner","topRightCorner","bottomRightCorner","useRemoteJsQR","remoteDependencies","timeout","useWebQRScanner","video","_ref2","isEnabled","captureOptions","interval","onScanned","onError","isRunning","useRef","undefined","_useRemoteJsQR","_useRemoteJsQR2","_slicedToArray","decode","clearWorker","scanAsync","intervalToUse","_regeneratorRuntime","async","scanAsync$","_context","prev","next","current","stop","abrupt","awrap","sent","t0","setTimeout","finish","Promise","clearTimeout","useEffect","kill"],"sources":["D:\\programming\\apper\\camera-app\\node_modules\\expo-camera\\src\\useWebQRScanner.ts"],"sourcesContent":["import { useWorker } from '@koale/useworker';\nimport * as React from 'react';\n\nimport { CameraPictureOptions } from './Camera';\nimport { BarCodeScanningResult, MountErrorListener } from './Camera.types';\nimport { captureImageData } from './WebCameraUtils';\n\nconst qrWorkerMethod = ({ data, width, height }: ImageData): any => {\n  // eslint-disable-next-line no-undef\n  const decoded = (self as any).jsQR(data, width, height, {\n    inversionAttempts: 'dontInvert',\n  });\n\n  let parsed;\n  try {\n    parsed = JSON.parse(decoded);\n  } catch (err) {\n    parsed = decoded;\n  }\n\n  if (parsed?.data) {\n    const nativeEvent: BarCodeScanningResult = {\n      type: 'qr',\n      data: parsed.data,\n    };\n    if (parsed.location) {\n      nativeEvent.cornerPoints = [\n        parsed.location.topLeftCorner,\n        parsed.location.bottomLeftCorner,\n        parsed.location.topRightCorner,\n        parsed.location.bottomRightCorner,\n      ];\n    }\n    return nativeEvent;\n  }\n  return parsed;\n};\n\nfunction useRemoteJsQR() {\n  return useWorker(qrWorkerMethod, {\n    remoteDependencies: ['https://cdn.jsdelivr.net/npm/jsqr@1.2.0/dist/jsQR.min.js'],\n    timeout: 5000,\n  });\n}\n\nexport function useWebQRScanner(\n  video: React.MutableRefObject<HTMLVideoElement | null>,\n  {\n    isEnabled,\n    captureOptions,\n    interval,\n    onScanned,\n    onError,\n  }: {\n    isEnabled: boolean;\n    captureOptions: Pick<CameraPictureOptions, 'scale' | 'isImageMirror'>;\n    interval?: number;\n    onScanned?: (scanningResult: { nativeEvent: BarCodeScanningResult }) => void;\n    onError?: MountErrorListener;\n  }\n) {\n  const isRunning = React.useRef<boolean>(false);\n  const timeout = React.useRef<number | undefined>(undefined);\n\n  const [decode, clearWorker] = useRemoteJsQR();\n\n  async function scanAsync() {\n    // If interval is 0 then only scan once.\n    if (!isRunning.current || !onScanned) {\n      stop();\n      return;\n    }\n    try {\n      const data = captureImageData(video.current, captureOptions);\n\n      if (data) {\n        const nativeEvent: BarCodeScanningResult | any = await decode(data);\n        if (nativeEvent?.data) {\n          onScanned({\n            nativeEvent,\n          });\n        }\n      }\n    } catch (error) {\n      if (onError) {\n        onError({ nativeEvent: error });\n      }\n    } finally {\n      // If interval is 0 then only scan once.\n      if (interval === 0) {\n        stop();\n        return;\n      }\n      const intervalToUse = !interval || interval < 0 ? 16 : interval;\n      // @ts-ignore: Type 'Timeout' is not assignable to type 'number'\n      timeout.current = setTimeout(() => {\n        scanAsync();\n      }, intervalToUse);\n    }\n  }\n\n  function stop() {\n    isRunning.current = false;\n    clearTimeout(timeout.current);\n  }\n\n  React.useEffect(() => {\n    if (isEnabled) {\n      isRunning.current = true;\n      scanAsync();\n    } else {\n      stop();\n    }\n  }, [isEnabled]);\n\n  React.useEffect(() => {\n    return () => {\n      stop();\n      clearWorker.kill();\n    };\n  }, []);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}