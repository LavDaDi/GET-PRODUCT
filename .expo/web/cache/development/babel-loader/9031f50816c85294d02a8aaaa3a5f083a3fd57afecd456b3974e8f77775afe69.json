{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { UnavailabilityError } from 'expo-modules-core';\nexport default {\n  get name() {\n    return 'ExpoSharing';\n  },\n  isAvailableAsync: function () {\n    var _isAvailableAsync = _asyncToGenerator(function* () {\n      if (typeof navigator === 'undefined') {\n        return false;\n      }\n      return !!navigator.share;\n    });\n    function isAvailableAsync() {\n      return _isAvailableAsync.apply(this, arguments);\n    }\n    return isAvailableAsync;\n  }(),\n  shareAsync: function () {\n    var _shareAsync = _asyncToGenerator(function* (url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (navigator.share) {\n        yield navigator.share(_objectSpread(_objectSpread({}, options), {}, {\n          url: url\n        }));\n      } else {\n        throw new UnavailabilityError('navigator', 'share');\n      }\n    });\n    function shareAsync(_x) {\n      return _shareAsync.apply(this, arguments);\n    }\n    return shareAsync;\n  }()\n};","map":{"version":3,"names":["UnavailabilityError","name","isAvailableAsync","_isAvailableAsync","_asyncToGenerator","navigator","share","apply","arguments","shareAsync","_shareAsync","url","options","length","undefined","_objectSpread","_x"],"sources":["D:\\programming\\apper\\camera-app\\node_modules\\expo-sharing\\src\\ExpoSharing.web.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\ntype ShareOptions = { title?: string; text?: string; url?: string };\n\nexport default {\n  get name(): string {\n    return 'ExpoSharing';\n  },\n  async isAvailableAsync(): Promise<boolean> {\n    if (typeof navigator === 'undefined') {\n      return false;\n    }\n\n    return !!navigator.share;\n  },\n  async shareAsync(url: string, options: ShareOptions = {}): Promise<void> {\n    // NOTE: `navigator.share` is only available via HTTPS\n    if (navigator.share) {\n      await navigator.share({ ...options, url });\n    } else {\n      throw new UnavailabilityError('navigator', 'share');\n    }\n  },\n};\n"],"mappings":";;;;AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAIvD,eAAe;EACb,IAAIC,IAAIA,CAAA;IACN,OAAO,aAAa;EACtB,CAAC;EACKC,gBAAgB;IAAA,IAAAC,iBAAA,GAAAC,iBAAA;MACpB,IAAI,OAAOC,SAAS,KAAK,WAAW,EAAE;QACpC,OAAO,KAAK;;MAGd,OAAO,CAAC,CAACA,SAAS,CAACC,KAAK;IAC1B,CAAC;IAAA,SAAAJ,iBAAA;MAAA,OAAAC,iBAAA,CAAAI,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAN,gBAAA;EAAA;EACKO,UAAU;IAAA,IAAAC,WAAA,GAAAN,iBAAA,YAACO,GAAW,EAA4B;MAAA,IAA1BC,OAAA,GAAAJ,SAAA,CAAAK,MAAA,QAAAL,SAAA,QAAAM,SAAA,GAAAN,SAAA,MAAwB,EAAE;MAEtD,IAAIH,SAAS,CAACC,KAAK,EAAE;QACnB,MAAMD,SAAS,CAACC,KAAK,CAAAS,aAAA,CAAAA,aAAA,KAAMH,OAAO;UAAED,GAAG,EAAHA;QAAG,EAAE,CAAC;OAC3C,MAAM;QACL,MAAM,IAAIX,mBAAmB,CAAC,WAAW,EAAE,OAAO,CAAC;;IAEvD,CAAC;IAAA,SAAAS,WAAAO,EAAA;MAAA,OAAAN,WAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAC,UAAA;EAAA;CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}