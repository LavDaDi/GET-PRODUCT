{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"type\", \"pictureSize\", \"poster\"];\nvar _jsxFileName = \"D:\\\\programming\\\\apper\\\\camera-app\\\\node_modules\\\\expo-camera\\\\build\\\\ExpoCamera.web.js\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { CodedError } from 'expo-modules-core';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport createElement from 'react-native-web/dist/exports/createElement';\nimport { CameraType } from './Camera.types';\nimport CameraManager from './ExpoCameraManager.web';\nimport { capture } from './WebCameraUtils';\nimport { PictureSizes } from './WebConstants';\nimport { useWebCameraStream } from './useWebCameraStream';\nimport { useWebQRScanner } from './useWebQRScanner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ExponentCamera = React.forwardRef(function (_ref, ref) {\n  var _props$barCodeScanner3, _props$barCodeScanner4;\n  var type = _ref.type,\n    pictureSize = _ref.pictureSize,\n    poster = _ref.poster,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var video = React.useRef(null);\n  var native = useWebCameraStream(video, type, props, {\n    onCameraReady: function onCameraReady() {\n      if (props.onCameraReady) {\n        props.onCameraReady();\n      }\n    },\n    onMountError: props.onMountError\n  });\n  var isQRScannerEnabled = React.useMemo(function () {\n    var _props$barCodeScanner, _props$barCodeScanner2;\n    return !!((_props$barCodeScanner = props.barCodeScannerSettings) != null && (_props$barCodeScanner2 = _props$barCodeScanner.barCodeTypes) != null && _props$barCodeScanner2.includes('qr') && !!props.onBarCodeScanned);\n  }, [(_props$barCodeScanner3 = props.barCodeScannerSettings) == null ? void 0 : _props$barCodeScanner3.barCodeTypes, props.onBarCodeScanned]);\n  useWebQRScanner(video, {\n    interval: (_props$barCodeScanner4 = props.barCodeScannerSettings) == null ? void 0 : _props$barCodeScanner4.interval,\n    isEnabled: isQRScannerEnabled,\n    captureOptions: {\n      scale: 1,\n      isImageMirror: native.type === CameraType.front\n    },\n    onScanned: function onScanned(event) {\n      if (props.onBarCodeScanned) {\n        props.onBarCodeScanned(event);\n      }\n    }\n  });\n  React.useImperativeHandle(ref, function () {\n    return {\n      getAvailablePictureSizes: function () {\n        var _getAvailablePictureSizes = _asyncToGenerator(function* (ratio) {\n          return PictureSizes;\n        });\n        function getAvailablePictureSizes(_x) {\n          return _getAvailablePictureSizes.apply(this, arguments);\n        }\n        return getAvailablePictureSizes;\n      }(),\n      takePicture: function () {\n        var _takePicture = _asyncToGenerator(function* (options) {\n          var _video$current, _video$current2;\n          if (!video.current || ((_video$current = video.current) == null ? void 0 : _video$current.readyState) !== ((_video$current2 = video.current) == null ? void 0 : _video$current2.HAVE_ENOUGH_DATA)) {\n            throw new CodedError('ERR_CAMERA_NOT_READY', 'HTMLVideoElement does not have enough camera data to construct an image yet.');\n          }\n          var settings = native.mediaTrackSettings;\n          if (!settings) {\n            throw new CodedError('ERR_CAMERA_NOT_READY', 'MediaStream is not ready yet.');\n          }\n          return capture(video.current, settings, _objectSpread(_objectSpread({}, options), {}, {\n            onPictureSaved: function onPictureSaved(picture) {\n              if (options.onPictureSaved) {\n                options.onPictureSaved(picture);\n              }\n              if (props.onPictureSaved) {\n                props.onPictureSaved({\n                  nativeEvent: {\n                    data: picture,\n                    id: -1\n                  }\n                });\n              }\n            }\n          }));\n        });\n        function takePicture(_x2) {\n          return _takePicture.apply(this, arguments);\n        }\n        return takePicture;\n      }(),\n      resumePreview: function () {\n        var _resumePreview = _asyncToGenerator(function* () {\n          if (video.current) {\n            video.current.play();\n          }\n        });\n        function resumePreview() {\n          return _resumePreview.apply(this, arguments);\n        }\n        return resumePreview;\n      }(),\n      pausePreview: function () {\n        var _pausePreview = _asyncToGenerator(function* () {\n          if (video.current) {\n            video.current.pause();\n          }\n        });\n        function pausePreview() {\n          return _pausePreview.apply(this, arguments);\n        }\n        return pausePreview;\n      }()\n    };\n  }, [native.mediaTrackSettings, props.onPictureSaved]);\n  var isMuted = true;\n  var style = React.useMemo(function () {\n    var isFrontFacingCamera = native.type === CameraManager.Type.front;\n    return [StyleSheet.absoluteFill, styles.video, {\n      pointerEvents: props.pointerEvents,\n      transform: isFrontFacingCamera ? [{\n        scaleX: -1\n      }] : undefined\n    }];\n  }, [props.pointerEvents, native.type]);\n  return _jsxDEV(View, {\n    style: [styles.videoWrapper, props.style],\n    children: [_jsxDEV(Video, {\n      autoPlay: true,\n      playsInline: true,\n      muted: isMuted,\n      poster: poster,\n      ref: video,\n      style: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, _this), props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 13\n  }, _this);\n});\nexport default ExponentCamera;\nvar Video = React.forwardRef(function (props, ref) {\n  return createElement('video', _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref\n  }));\n});\nvar styles = StyleSheet.create({\n  videoWrapper: {\n    flex: 1,\n    alignItems: 'stretch',\n    pointerEvents: 'box-none'\n  },\n  video: {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover'\n  }\n});","map":{"version":3,"names":["CodedError","React","StyleSheet","View","createElement","CameraType","CameraManager","capture","PictureSizes","useWebCameraStream","useWebQRScanner","jsxDEV","_jsxDEV","ExponentCamera","forwardRef","_ref","ref","_props$barCodeScanner3","_props$barCodeScanner4","type","pictureSize","poster","props","_objectWithoutProperties","_excluded","video","useRef","native","onCameraReady","onMountError","isQRScannerEnabled","useMemo","_props$barCodeScanner","_props$barCodeScanner2","barCodeScannerSettings","barCodeTypes","includes","onBarCodeScanned","interval","isEnabled","captureOptions","scale","isImageMirror","front","onScanned","event","useImperativeHandle","getAvailablePictureSizes","_getAvailablePictureSizes","_asyncToGenerator","ratio","_x","apply","arguments","takePicture","_takePicture","options","_video$current","_video$current2","current","readyState","HAVE_ENOUGH_DATA","settings","mediaTrackSettings","_objectSpread","onPictureSaved","picture","nativeEvent","data","id","_x2","resumePreview","_resumePreview","play","pausePreview","_pausePreview","pause","isMuted","style","isFrontFacingCamera","Type","absoluteFill","styles","pointerEvents","transform","scaleX","undefined","videoWrapper","children","Video","autoPlay","playsInline","muted","fileName","_jsxFileName","lineNumber","columnNumber","_this","create","flex","alignItems","width","height","objectFit"],"sources":["D:\\programming\\apper\\camera-app\\node_modules\\expo-camera\\src\\ExpoCamera.web.tsx"],"sourcesContent":["import { CodedError } from 'expo-modules-core';\nimport * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\nimport createElement from 'react-native-web/dist/exports/createElement';\n\nimport {\n  CameraCapturedPicture,\n  CameraNativeProps,\n  CameraPictureOptions,\n  CameraType,\n} from './Camera.types';\nimport CameraManager from './ExpoCameraManager.web';\nimport { capture } from './WebCameraUtils';\nimport { PictureSizes } from './WebConstants';\nimport { useWebCameraStream } from './useWebCameraStream';\nimport { useWebQRScanner } from './useWebQRScanner';\n\nexport interface ExponentCameraRef {\n  getAvailablePictureSizes: (ratio: string) => Promise<string[]>;\n  takePicture: (options: CameraPictureOptions) => Promise<CameraCapturedPicture>;\n  resumePreview: () => Promise<void>;\n  pausePreview: () => Promise<void>;\n}\n\nconst ExponentCamera = React.forwardRef(\n  (\n    { type, pictureSize, poster, ...props }: CameraNativeProps & { children?: React.ReactNode },\n    ref: React.Ref<ExponentCameraRef>\n  ) => {\n    const video = React.useRef<HTMLVideoElement | null>(null);\n\n    const native = useWebCameraStream(video, type as CameraType, props, {\n      onCameraReady() {\n        if (props.onCameraReady) {\n          props.onCameraReady();\n        }\n      },\n      onMountError: props.onMountError,\n    });\n\n    const isQRScannerEnabled = React.useMemo<boolean>(() => {\n      return !!(\n        props.barCodeScannerSettings?.barCodeTypes?.includes('qr') && !!props.onBarCodeScanned\n      );\n    }, [props.barCodeScannerSettings?.barCodeTypes, props.onBarCodeScanned]);\n\n    useWebQRScanner(video, {\n      interval: props.barCodeScannerSettings?.interval,\n      isEnabled: isQRScannerEnabled,\n      captureOptions: { scale: 1, isImageMirror: native.type === CameraType.front },\n      onScanned(event) {\n        if (props.onBarCodeScanned) {\n          props.onBarCodeScanned(event);\n        }\n      },\n      // onError: props.onMountError,\n    });\n\n    // const [pause, setPaused]\n\n    React.useImperativeHandle(\n      ref,\n      () => ({\n        async getAvailablePictureSizes(ratio: string): Promise<string[]> {\n          return PictureSizes;\n        },\n        async takePicture(options: CameraPictureOptions): Promise<CameraCapturedPicture> {\n          if (!video.current || video.current?.readyState !== video.current?.HAVE_ENOUGH_DATA) {\n            throw new CodedError(\n              'ERR_CAMERA_NOT_READY',\n              'HTMLVideoElement does not have enough camera data to construct an image yet.'\n            );\n          }\n          const settings = native.mediaTrackSettings;\n          if (!settings) {\n            throw new CodedError('ERR_CAMERA_NOT_READY', 'MediaStream is not ready yet.');\n          }\n\n          return capture(video.current, settings, {\n            ...options,\n            // This will always be defined, the option gets added to a queue in the upper-level. We should replace the original so it isn't called twice.\n            onPictureSaved(picture) {\n              if (options.onPictureSaved) {\n                options.onPictureSaved(picture);\n              }\n              if (props.onPictureSaved) {\n                props.onPictureSaved({ nativeEvent: { data: picture, id: -1 } });\n              }\n            },\n          });\n        },\n        async resumePreview(): Promise<void> {\n          if (video.current) {\n            video.current.play();\n          }\n        },\n        async pausePreview(): Promise<void> {\n          if (video.current) {\n            video.current.pause();\n          }\n        },\n      }),\n      [native.mediaTrackSettings, props.onPictureSaved]\n    );\n\n    // TODO(Bacon): Create a universal prop, on native the microphone is only used when recording videos.\n    // Because we don't support recording video in the browser we don't need the user to give microphone permissions.\n    const isMuted = true;\n\n    const style = React.useMemo<StyleProp<ViewStyle>>(() => {\n      const isFrontFacingCamera = native.type === CameraManager.Type.front;\n      return [\n        StyleSheet.absoluteFill,\n        styles.video,\n        {\n          pointerEvents: props.pointerEvents,\n          // Flip the camera\n          transform: isFrontFacingCamera ? [{ scaleX: -1 }] : undefined,\n        },\n      ];\n    }, [props.pointerEvents, native.type]);\n\n    return (\n      <View style={[styles.videoWrapper, props.style]}>\n        <Video\n          autoPlay\n          playsInline\n          muted={isMuted}\n          poster={poster}\n          // webkitPlaysinline\n          ref={video}\n          style={style}\n        />\n        {props.children}\n      </View>\n    );\n  }\n);\n\nexport default ExponentCamera;\n\nconst Video = React.forwardRef(\n  (\n    props: React.ComponentProps<typeof View> & {\n      autoPlay?: boolean;\n      playsInline?: boolean;\n      muted?: boolean;\n      poster?: string;\n    },\n    ref: React.Ref<HTMLVideoElement>\n  ) => createElement('video', { ...props, ref })\n);\n\nconst styles = StyleSheet.create({\n  videoWrapper: {\n    flex: 1,\n    alignItems: 'stretch',\n    pointerEvents: 'box-none',\n  },\n  video: {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}